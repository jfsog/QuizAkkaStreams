syntax = "proto3";
import "Enums.proto";
import "google/protobuf/empty.proto";
option java_multiple_files = true;
option java_package = "org.jfsog.grpc_quiz.v1.quiz";

package org.jfsog.grpc_quiz.v1.quiz;
/// Mensagens
message UserCredentials {
  string user_name = 1;       // Nome de usuário
  string token = 2;           // Token de autenticação
}
message Question{
  string enunciado  =1;
  string disciplina =2;
  string answer     =3;
  repeated string alternativas = 4;
}
message QuestionCreateRequest{
  UserCredentials userCredentials = 1;
  Question question = 2;
}
message QuestionCreateResponse{
  AuthStatus status = 1;
  string message = 2;
}
message PullQuestionRequest{
  UserCredentials userCredentials =1;
  int64 N =2;
}
message QuestionResponse{
  AuthStatus status = 1;
  Question question = 2;
}
message QuestionsResponse{
  AuthStatus status = 1;
  repeated Question question = 2;
}
message QuizSummaryResponse {
  int32 total_questions = 1;  // Total de questões enviadas
  int32 correct_answers = 2;  // Total de respostas corretas
  int64 total_points = 3;     // Pontos acumulados
  AuthStatus status =4;       // status da autenticação
}
message QuizRequest {
  string user_name = 1;       // Nome de usuário
  int64 question_id = 2;      // ID da questão
  string answer = 3;          // Resposta enviada pelo usuário
  string token = 4;           // Token de autenticação
}
message QuizResponse {
  int64 question_id = 1;      //ID da questão
  bool is_correct = 2;        //Resposta correta ou incorreta
  int64 points = 3;           //Pontos acumulados
  AuthStatus status =4;       //status da autenticação
}
// Serviços
service gRPCQuizService {
  rpc PlayQuiz(stream QuizRequest) returns (stream QuizResponse); // Serviço para jogar o quiz
  rpc QuizScore(UserCredentials) returns (QuizSummaryResponse);   // Serviço para obter o resumo do desempenho no quiz
  rpc CreateQuestion(QuestionCreateRequest) returns (QuestionCreateResponse); //cria perguntas
  rpc PullQuestions(PullQuestionRequest) returns (QuestionsResponse); // busca do banco um número específico de perguntas
  rpc PullQuestion(PullQuestionRequest) returns (QuestionResponse); //busca no banco por id da pergunta
}


